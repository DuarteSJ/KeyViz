[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "keyboard-visualizer"
version = "0.1.0"
description = "A visual keyboard layout manager and sound feedback system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["keyboard", "visualization", "layout", "sound", "typing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
    "Topic :: Multimedia :: Sound/Audio",
]
requires-python = ">=3.11"
dependencies = [
    "PyQt6>=6.4.0",
    "keyboard==0.13.5",
    "evdev==1.9.2",
    "click>=8.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "black==25.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
keyboard-visualizer = "keyboard_visualizer.__main__:main"
kviz = "keyboard_visualizer.__main__:main"

[project.urls]
Homepage = "https://github.com/DuarteSJ/KeyViz"
Repository = "https://github.com/DuarteSJ/KeyViz"
Issues = "https://github.com/DuarteSJ/KeyViz/issues"
# Documentation = ""

# Tool configurations
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
keyboard_visualizer = [
    "assets/sounds/keys/letters/*.wav",
    "assets/sounds/keys/special/*.wav", 
    "assets/sounds/ui/*.wav",
    "data/layouts/*.json",
    "data/layouts/templates/*.json",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
